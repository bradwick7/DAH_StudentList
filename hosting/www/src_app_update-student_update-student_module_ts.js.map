{"version":3,"file":"src_app_update-student_update-student_module_ts.js","mappings":"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","sources":["./src/app/update-student/update-student-routing.module.ts","./src/app/update-student/update-student.module.ts","./src/app/update-student/update-student.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdateStudentPage } from './update-student.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateStudentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpdateStudentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateStudentPageRoutingModule } from './update-student-routing.module';\n\nimport { UpdateStudentPage } from './update-student.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    UpdateStudentPageRoutingModule,\n  ],\n  declarations: [UpdateStudentPage],\n})\nexport class UpdateStudentPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Student } from '../models/student';\nimport { StudentService } from '../services/student.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-update-student',\n  templateUrl: './update-student.page.html',\n  styleUrls: ['./update-student.page.scss'],\n})\nexport class UpdateStudentPage implements OnInit {\n  public student: Student;\n  public updatedStudent: Student;\n  public myForm: FormGroup;\n  public validationMessages: Object;\n  public careers = ['ISC', 'IC', 'IBQ', 'IGE', 'ARQ', 'IM', 'IE'];\n\n  constructor(\n    private studentService: StudentService,\n    private activatedRouteService: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private alertController: AlertController\n  ) {}\n\n  ngOnInit() {\n    this.activatedRouteService.queryParams.subscribe((params) => {\n      this.student = this.studentService.getStudentByControlNumber(\n        params.controlNumber\n      );\n    });\n\n    this.myForm = this.formBuilder.group({\n      controlNumber: [\n        this.student.controlNumber,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(7),\n          Validators.maxLength(8),\n          Validators.pattern('^[0-9]+$'),\n        ]),\n      ],\n      name: [this.student.name, Validators.compose([Validators.required])],\n      curp: [\n        this.student.curp,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            '[A-Z]{4}[0-9]{6}[HM]{1}[A-Z]{2}[BCDFGHJKLMNPQRSTVWXYZ]{3}([A-Z]{2})?([0-9]{2})?'\n          ),\n        ]),\n      ],\n      age: [\n        this.student.age,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern('^(1[8-9]|[2-9][0-9]|100)$'),\n        ]),\n      ],\n      nip: [\n        this.student.nip,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern('^(1[0-9]|[2-9][0-9]|[1-9][0-9]{2,3})$'),\n        ]),\n      ],\n      email: [\n        this.student.email,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            '^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()[]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$'\n          ),\n        ]),\n      ],\n      career: [this.student.career, Validators.compose([Validators.required])],\n      photo: [\n        this.student.photo,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            '^((http(s?)?)://)?([wW]{3}.)?[a-zA-Z0-9-.]+.[a-zA-Z]{2,}(.[a-zA-Z]{2,})?(/[0-9]{3,})*$'\n          ),\n        ]),\n      ],\n    });\n\n    this.validationMessages = {\n      controlNumber: [\n        {\n          type: 'required',\n          message: 'Número de control obligatorio',\n        },\n        {\n          type: 'minlength',\n          message: 'Número de control debe ser de 8 dígitos',\n        },\n        {\n          type: 'maxlength',\n          message: 'Número de control debe ser de 8 dígitos',\n        },\n        {\n          type: 'pattern',\n          message: 'Número de control solo son dígitos',\n        },\n      ],\n      name: [\n        {\n          type: 'required',\n          message: 'El nombre es requerido',\n        },\n      ],\n      curp: [\n        {\n          type: 'required',\n          message: 'CURP requerido',\n        },\n        {\n          type: 'pattern',\n          message: 'El CURP ingresado no es válido',\n        },\n      ],\n      age: [\n        {\n          type: 'required',\n          message: 'La edad es requerida',\n        },\n        {\n          type: 'pattern',\n          message: 'Edad debe ser mayor a 17',\n        },\n      ],\n      nip: [\n        {\n          type: 'required',\n          message: 'El nip es requerido',\n        },\n        {\n          type: 'pattern',\n          message: 'El nip deberá ser mayor a 9 y menor a 10,000',\n        },\n      ],\n      email: [\n        {\n          type: 'required',\n          message: 'El correo electrónico es requerido',\n        },\n        {\n          type: 'pattern',\n          message: 'El correo electrónico no es válido',\n        },\n      ],\n      career: [\n        {\n          type: 'required',\n          message: 'Selecciona una carrera',\n        },\n      ],\n      photo: [\n        {\n          type: 'required',\n          message: 'La URL de la foto es requerida',\n        },\n        {\n          type: 'pattern',\n          message: 'La URL ingresada no es válida',\n        },\n      ],\n    };\n\n    this.myForm.get('name').markAsDirty();\n    this.myForm.get('curp').markAsDirty();\n    this.myForm.get('age').markAsDirty();\n    this.myForm.get('email').markAsDirty();\n    this.myForm.get('career').markAsDirty();\n    this.myForm.get('photo').markAsDirty();\n  }\n\n  public guardarEstudiante(): void {\n    console.log(this.myForm.valid);\n\n    if (this.myForm.valid) {\n      this.updatedStudent = {\n        controlNumber: this.myForm.get('controlNumber').value,\n        name: this.myForm.get('name').value,\n        curp: this.myForm.get('curp').value,\n        age: this.myForm.get('age').value,\n        nip: this.myForm.get('nip').value,\n        email: this.myForm.get('email').value,\n        career: this.myForm.get('career').value,\n        photo: this.myForm.get('photo').value,\n      };\n      this.studentService.updateStudent(this.updatedStudent);\n      this.presentAlert();\n    } else {\n      this.presentAlert2();\n    }\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Se actualizaron los datos del estudiante',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n  async presentAlert2() {\n    const alert = await this.alertController.create({\n      header: 'Verifica que los campos estén correctos',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}